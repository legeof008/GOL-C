==24256== Memcheck, a memory error detector
==24256== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==24256== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==24256== Command: ./memleak -f file -p test.png -c 20 -s 5
==24256== 
==24256== 
==24256== HEAP SUMMARY:
==24256==     in use at exit: 183,356 bytes in 57 blocks
==24256==   total heap usage: 111 allocs, 54 frees, 199,920 bytes allocated
==24256== 
==24256== 816 (16 direct, 800 indirect) bytes in 1 blocks are definitely lost in loss record 10 of 18
==24256==    at 0x483B7F3: malloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==24256==    by 0x1096B6: mx_alloc (cell.c:56)
==24256==    by 0x10BDD2: main (main.c:121)
==24256== 
==24256== 960 bytes in 40 blocks are definitely lost in loss record 11 of 18
==24256==    at 0x483B7F3: malloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==24256==    by 0x10A4D0: get_neighbours_8 (cycle.c:315)
==24256==    by 0x10A66C: create_cell_with_inherited_colors_8 (cycle.c:365)
==24256==    by 0x10B182: make_a_cycle_rewrite_struct_8 (cycle.c:610)
==24256==    by 0x10BE0F: main (main.c:206)
==24256== 
==24256== LEAK SUMMARY:
==24256==    definitely lost: 976 bytes in 41 blocks
==24256==    indirectly lost: 800 bytes in 1 blocks
==24256==      possibly lost: 0 bytes in 0 blocks
==24256==    still reachable: 181,580 bytes in 15 blocks
==24256==         suppressed: 0 bytes in 0 blocks
==24256== Reachable blocks (those to which a pointer was found) are not shown.
==24256== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==24256== 
==24256== For lists of detected and suppressed errors, rerun with: -s
==24256== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
